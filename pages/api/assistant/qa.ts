import type { NextApiRequest, NextApiResponse } from "next";
import { getServerSession } from "next-auth/next";
import { authOptions } from "../auth/[...nextauth]";
import { prisma } from "../../../lib/prisma";

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse
) {
  if (req.method !== "POST") {
    return res.status(405).json({ message: "Method not allowed" });
  }

  const session = await getServerSession(req, res, authOptions);
  if (!session) {
    // Allow unauthenticated for demo; return limited info
  }

  try {
    const { question, issueType } = req.body as {
      question?: string;
      issueType?: string;
    };
    if (!question || !question.trim()) {
      return res.status(400).json({ message: "Question is required" });
    }

    // Simple keyword search across Knowledge Articles and FAQs
    const query = question.trim();

    // 1) User-friendly responses by issue type
    const canned: Record<string, string> = {
      ACCOUNT: [
        "Account & Profile Help",
        "â€¢ To update your profile: Go to your dashboard and click on your profile settings",
        "â€¢ To change your password: Use the 'Change Password' option in your profile settings",
        "â€¢ If you forgot your password: Click 'Forgot Password' on the login page and follow the instructions",
        "â€¢ If you're locked out: Contact your Department Administrator for assistance",
        "â€¢ Your profile contains your personal information, academic details, and account preferences",
      ].join("\n"),
      COURSE_REG: [
        "Course Registration Guide",
        "â€¢ Navigate to the 'Courses' section in your dashboard",
        "â€¢ Browse available courses and select the ones you want to register for",
        "â€¢ You can register for up to 24 Credit Units (CU) per semester",
        "â€¢ After selecting courses, submit your registration for approval",
        "â€¢ Your registration status will be visible on the Courses page",
        "â€¢ You'll receive notifications about approval status and any required actions",
        "â€¢ If you need to make changes, contact your academic advisor before the deadline",
      ].join("\n"),
      CONTENT_DOWNLOAD: [
        "Downloading Course Materials",
        "â€¢ Go to the 'Content Library' or 'Materials' section in your dashboard",
        "â€¢ Browse through available course materials organized by course",
        "â€¢ Click on any material to download it to your device",
        "â€¢ Materials may include lecture notes, assignments, readings, and multimedia content",
        "â€¢ If you can't find a specific material, check with your lecturer or course coordinator",
        "â€¢ Ensure you have a stable internet connection for large file downloads",
      ].join("\n"),
      VIRTUAL_MEETING: [
        "Virtual Meetings & Classes",
        "â€¢ Check the 'Meetings' section in your dashboard for scheduled sessions",
        "â€¢ You'll receive notifications when new meetings are scheduled",
        "â€¢ Click on meeting links to join Zoom or Google Meet sessions",
        "â€¢ Make sure your camera and microphone are working before joining",
        "â€¢ Join meetings a few minutes early to test your connection",
        "â€¢ If you miss a meeting, check if recordings are available in the course materials",
      ].join("\n"),
      CHAT_QA: [
        "Course Communication & Q&A",
        "â€¢ Use the 'Course Communication' section to ask questions and participate in discussions",
        "â€¢ You can ask questions about course content, assignments, or general topics",
        "â€¢ Vote on helpful answers from other students and lecturers",
        "â€¢ Check for unread messages and respond to questions from your peers",
        "â€¢ Be respectful and constructive in your communications",
        "â€¢ Use this feature to collaborate with classmates and get help from instructors",
      ].join("\n"),
      GRADES_RESULTS: [
        "Grades & Results Information",
        "â€¢ View your grades in the 'Grade History' section of your dashboard",
        "â€¢ Grades go through an approval process: Department â†’ School â†’ Senate",
        "â€¢ You'll see your grades only after they're fully approved by the Senate",
        "â€¢ Check the status of your results in the grade history page",
        "â€¢ If you have concerns about a grade, contact your lecturer or academic advisor",
        "â€¢ Grade notifications will be sent to you when results are finalized",
      ].join("\n"),
      NOTIFICATIONS: [
        "Notifications & Alerts",
        "â€¢ All your notifications appear in the 'Notifications' section",
        "â€¢ You can mark individual notifications as read or mark all as read",
        "â€¢ Notification types include: grades, course registration updates, virtual class reminders, announcements, deadlines, and general reminders",
        "â€¢ Check your notifications regularly to stay updated on important information",
        "â€¢ You can filter notifications by type to find specific information quickly",
        "â€¢ Important notifications will be highlighted and require your attention",
      ].join("\n"),
      SUPPORT_TICKET: [
        "Support & Help Tickets",
        "â€¢ Go to the 'Support' section and click on the 'Tickets' tab",
        "â€¢ Create a new ticket to report issues or ask for help",
        "â€¢ Provide detailed information about your problem or question",
        "â€¢ Support staff will respond to your ticket and help resolve the issue",
        "â€¢ You can track the status of your tickets and view responses",
        "â€¢ Use this for technical problems, academic questions, or general assistance",
      ].join("\n"),
      TECHNICAL: [
        "Technical Support & Tips",
        "â€¢ Use a modern web browser (Chrome, Firefox, Safari, or Edge) for the best experience",
        "â€¢ If the interface looks unusual, try refreshing the page (Ctrl+F5 or Cmd+Shift+R)",
        "â€¢ Ensure your internet connection is stable for uploading files or joining meetings",
        "â€¢ Check that your browser allows pop-ups for meeting links and downloads",
        "â€¢ Clear your browser cache if you experience persistent issues",
        "â€¢ Contact technical support if problems continue after trying these steps",
      ].join("\n"),
      GENERAL: [
        "General Help & Resources",
        "â€¢ Explore the 'Knowledge Base' for detailed guides and tutorials",
        "â€¢ Download the User Manual for comprehensive platform information",
        "â€¢ Use the AI Assistant (this chat) for quick answers to common questions",
        "â€¢ Create a support ticket if you need personalized assistance",
        "â€¢ Check the FAQ section for answers to frequently asked questions",
        "â€¢ Contact your academic advisor for course-specific guidance",
      ].join("\n"),
      RESULT_APPROVAL: [
        "Result Approval Process (For Administrators)",
        "â€¢ Review pending results in the 'Result Approvals' section",
        "â€¢ Check student submissions and lecturer recommendations",
        "â€¢ Approve or request changes to submitted results",
        "â€¢ Results follow this approval chain: Department â†’ School â†’ Senate",
        "â€¢ Ensure all required documentation is complete before approval",
        "â€¢ Communicate with other administrators about approval decisions",
      ].join("\n"),
      CONTENT_UPLOAD: [
        "Content Upload Guide (For Lecturers)",
        "â€¢ Access the 'Content Library' section in your dashboard",
        "â€¢ Click 'Upload Content' to add new materials for your courses",
        "â€¢ Supported formats include PDF, Word documents, images, and videos",
        "â€¢ Organize content by course and add descriptions for students",
        "â€¢ Edit or delete content as needed throughout the semester",
        "â€¢ Monitor download statistics to see which materials are most accessed",
      ].join("\n"),
    };

    if (issueType && canned[issueType]) {
      const manualPath = "/User Manual Second draft.pdf";
      const answer = `${canned[issueType]}\n\nðŸ“– Download the complete User Manual for detailed instructions: ${manualPath}`;
      return res.status(200).json({ answer, manual: manualPath });
    }

    const articles = await prisma.knowledgeArticle.findMany({
      where: {
        status: "PUBLISHED",
        OR: [
          { title: { contains: query, mode: "insensitive" } },
          { summary: { contains: query, mode: "insensitive" } },
          { content: { contains: query, mode: "insensitive" } },
          { tags: { hasSome: query.split(/\s+/).filter(Boolean) } },
        ],
      },
      select: {
        id: true,
        title: true,
        summary: true,
        content: true,
        category: true,
      },
      take: 3,
      orderBy: { createdAt: "desc" },
    });

    const faqs = await prisma.fAQ.findMany({
      where: {
        isPublished: true,
        OR: [
          { question: { contains: query, mode: "insensitive" } },
          { answer: { contains: query, mode: "insensitive" } },
          { tags: { hasSome: query.split(/\s+/).filter(Boolean) } },
        ],
      },
      select: { id: true, question: true, answer: true, category: true },
      take: 3,
      orderBy: { updatedAt: "desc" },
    });

    // 2) Keyword-to-issueType mapping if user didn't choose one
    const keywordMap: { key: string; type: keyof typeof canned }[] = [
      { key: "register", type: "COURSE_REG" },
      { key: "course", type: "COURSE_REG" },
      { key: "enroll", type: "COURSE_REG" },
      { key: "download", type: "CONTENT_DOWNLOAD" },
      { key: "material", type: "CONTENT_DOWNLOAD" },
      { key: "content", type: "CONTENT_DOWNLOAD" },
      { key: "meeting", type: "VIRTUAL_MEETING" },
      { key: "zoom", type: "VIRTUAL_MEETING" },
      { key: "chat", type: "CHAT_QA" },
      { key: "q&a", type: "CHAT_QA" },
      { key: "question", type: "CHAT_QA" },
      { key: "grade", type: "GRADES_RESULTS" },
      { key: "result", type: "GRADES_RESULTS" },
      { key: "approval", type: "RESULT_APPROVAL" },
      { key: "notification", type: "NOTIFICATIONS" },
      { key: "ticket", type: "SUPPORT_TICKET" },
      { key: "support", type: "SUPPORT_TICKET" },
      { key: "password", type: "ACCOUNT" },
      { key: "profile", type: "ACCOUNT" },
      { key: "upload", type: "CONTENT_UPLOAD" },
      { key: "technical", type: "TECHNICAL" },
    ];

    let inferred: keyof typeof canned | undefined;
    if (!issueType) {
      const lower = query.toLowerCase();
      const hit = keywordMap.find((m) => lower.includes(m.key));
      if (hit) inferred = hit.type;
    }

    // 3) Compose a concise answer
    const lines: string[] = [];
    if (articles.length > 0) {
      lines.push("Here are some relevant Knowledge Base articles:");
      for (const a of articles) {
        const snippet = (a.summary || a.content || "").slice(0, 200);
        lines.push(
          `â€¢ ${a.title} â€” ${snippet}${snippet.length === 200 ? "â€¦" : ""}`
        );
      }
    }
    if (faqs.length > 0) {
      lines.push(
        articles.length > 0 ? "\nRelated FAQs:" : "Here are some related FAQs:"
      );
      for (const f of faqs) {
        const snippet = (f.answer || "").slice(0, 200);
        lines.push(
          `â€¢ ${f.question} â€” ${snippet}${snippet.length === 200 ? "â€¦" : ""}`
        );
      }
    }

    // Always offer the user manual link for broader help
    const manualPath = "/User Manual Second draft.pdf";
    lines.push(
      "\nðŸ“– Download the complete User Manual for detailed instructions:"
    );
    lines.push(manualPath);

    let answer: string;
    if (issueType && canned[issueType]) {
      answer = `${canned[issueType]}\n\nðŸ“– Download the complete User Manual for detailed instructions: ${manualPath}`;
    } else if (inferred && canned[inferred]) {
      answer = `${canned[inferred]}\n\nðŸ“– Download the complete User Manual for detailed instructions: ${manualPath}`;
    } else if (articles.length === 0 && faqs.length === 0) {
      answer = [
        "Quick Start Guide",
        "â€¢ Courses: Navigate to the Courses section to register (up to 24 Credit Units) and submit for approval",
        "â€¢ Content: Download materials from the Content Library or Materials section",
        "â€¢ Meetings: Join virtual sessions from the Meetings page; you'll receive notification links",
        "â€¢ Chat/Q&A: Use Course Communication to ask questions and participate in discussions",
        "â€¢ Grades: View your results in Grade History after Senate approval",
        "â€¢ Notifications: Check and manage your alerts in the Notifications section",
        "â€¢ Help: Create a support ticket in the Support section for personalized assistance",
        `ðŸ“– Download the complete User Manual for detailed instructions: ${manualPath}`,
      ].join("\n");
    } else {
      answer = lines.join("\n");
    }

    return res.status(200).json({ answer, articles, faqs, manual: manualPath });
  } catch (error) {
    console.error("Assistant QA error:", error);
    return res.status(500).json({ message: "Internal server error" });
  }
}
